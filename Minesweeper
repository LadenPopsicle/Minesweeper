import java.util.Random;

public class Minesweeper{
  /* private static int sides
 private static int howManyMines = 0;
 
 private static int flagRow;
 private static int flagCol;  */
 
  public void displayGrid(char[][] playerGrid) {         //displays grid
    for(int row=0; row < playerGrid.length; row++) {
     for(int col=0; col < playerGrid[row].length; col++) {
        System.out.print(playerGrid[row][col]);
      }
      System.out.println("");
   }
  }
  
  public boolean isMine(int r, int c, char[][] grid){ //checks if the spot on grid contains a mine
    if(grid[r][c]=='#')
        return true;
      else
        return false;
  }
 
  public char[][] genPuzzle(int side, int mine){ 
    Random r = new Random();
    char[][] arr = new char [side][side];  
    int counter= 0;
      
    while(counter<mine){
      int checkX = r.nextInt(side);
      int checkY = r.nextInt(side);
      if(!((arr[checkX][checkY])=='#')){
        arr[checkX][checkY] = '#';
        counter ++;
      }
    }
    // The above while loop placed the mines 
    return arr;
  }

    public char[][] idkWhatToNameThis(char[][] original){
      char[][] newArr = new char[original.length][original[0].length];
        for(int row=0; row < original.length; row++) {
          for(int col=0; col < original[row].length; col++) {
              newArr[row][col]='?';
        }
       }
       return newArr;
    }

    public char[][] flagPlacer(char[][] playerGrid, int flagR, int flagC) {
      if(playerGrid[flagR][flagC]=='?'){
        playerGrid[flagR][flagC]='F';
      }
      return playerGrid;   
    }
    
    public char numFinder(char[][] playerGrid, char[][] mineGrid, int r, int c){
      int mineSum = 0;
      int len = mineGrid.length;
      int top = 0;
      int bot = 0;
      
      if(r!=0){
        top = r-1;
        if(mineGrid[top][c]=='#')
          mineSum++;
      }
      else{top=r;}
      
      if(r!=len){
        bot=r+2;
        if(mineGrid[r+1][c]=='#')
          mineSum++;
      }
      else{bot=r+1;}
      
      if(c!=0){
        for(int i=top; i<bot; i++){
         if(mineGrid[i][c-1]=='#')
           mineSum++;
        }
      }
      
      if(c!=len){
        for(int i=top; i<bot; i++){
         if(mineGrid[i][c+1]=='#')
           mineSum++;
        }
      }
      return (char)(mineSum+'0');
    }
      
      
} 
